#!/usr/bin/env python3
import sys

from aush import code

from lib.utils import read_config_file


def fmt(s):
    return ', '.join(sorted(s, key=str.lower))


def vscode(config_path):
    print("Updating Visual Studio Code extensions\n")

    # get installed/expected extensions
    installed = set(code(list_extensions=True))
    expected = set(read_config_file(config_path))
    missing = expected - installed

    print(f"Installed extensions: {fmt(installed)}\n")
    print(f"Expected extensions: {fmt(expected)}\n")
    print(f"Missing extensions: {fmt(missing)}\n")

    # install missing
    for package in sorted(missing):
        print(f"Installing: {package}")
        code(install_extension=package)

    # report any extensions that are installed that aren't in source control
    if unexpected := installed - expected:
        print(f"Installed extensions not in config: {fmt(unexpected)}")


if __name__ == '__main__':
    if not len(sys.argv) > 1:
        print(f"Usage: {sys.argv[0]} config-path", file=sys.stderr)
        sys.exit(1)

    vscode(sys.argv[1])

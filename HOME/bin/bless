#!/usr/bin/env python3
"""
This program is meant for moving a file under my setup source control.
Named after Perl where you'd "bless" data into an object.
"""
import logging
import os
import shutil
import subprocess
import sys
from pathlib import Path

from lib import setup
from lib.symlink import Partials


def copy(path_from, path_to):
    print(f"Copying {str(path_from)!r} to {str(path_to)!r}")
    func = shutil.copytree if os.path.isdir(path_from) else shutil.copy2
    parent = path_to.parent
    if not parent.exists():
        print(f"Creating parent directory {str(parent)!r}")
        parent.mkdir(parents=True)
        partials = Partials(Path(setup.root(), setup.PARTIALS_PATH))
        partials.add(setup.tilde_path(parent))
        partials.save()

    func(path_from, path_to)


def symlink(path_from, path_to):
    # bak already logs its operations
    subprocess.check_call(['bak', path_from])
    print(f"Creating symlink at {str(path_from)!r} pointing to {str(path_to)!r}")
    subprocess.check_call(['ln', '-s', path_to, path_from])


def bless(path):
    path = Path(path)
    if not path.exists():
        print(f"{str(path)!r} not found", file=sys.stderr)
        return 2

    if path.is_symlink():
        print(f"{str(path)!r} is already a symlink", file=sys.stderr)
        return 3

    setup_path = setup.home_path(path)
    copy(path, setup_path)
    symlink(path, setup_path)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    paths = sys.argv[1:]
    if not paths:
        print("No files provided", file=sys.stderr)
        sys.exit(1)

    for i, path in enumerate(paths):
        if i > 0:  # separate blessings
            print()

        ret = bless(path)
        if ret:
            sys.exit(ret)

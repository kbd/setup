#!/usr/bin/env python3
"""Fix 'ipython' to handle arguments more like 'python'.

https://twitter.com/keithdevens/status/595294880533876736
This is an imperfect hack because you could do "-c 'command'" and have command
be a file in contrived cases, but this shouldn't cause problems normally

To show why this is necessary, compare:
⚡~$ python -i bin/argv -i
['bin/argv', '-i']

⚡~$ ipython -i bin/argv -i
...
['/.../bin/argv']

The right way is to use '--' to tell ipython that its arguments are finished:

⚡~$ ipython -i bin/argv -- -i
...
['/.../bin/argv', '-i']

This shim makes that unnecessary, so 'ipython' is interchangeable with 'python'.

"""

import os
import sys

CMD = '/usr/local/bin/ipython'
DEFAULT_ARGS = [CMD, '--ext=autoreload']

args = sys.argv[1:]
for i, arg in enumerate(args):
    if not arg.startswith('-') and os.path.isfile(arg):
        # if arg doesn't start with a dash and the arg is a file
        # then consider this the script passed to ipython and
        # all args after this are args to the script
        break
else:
    i = len(args)

args = DEFAULT_ARGS + args[:i] + ['--'] + args[i:]

os.execv(CMD, args)

#!/usr/bin/env python3
import argparse
import os
import random
import sys
import time
from datetime import datetime, timedelta
from itertools import permutations

from aush import COLORS


def randomtext(style, file):
    print(
        *style,
        os.getpid(), file.name, datetime.now().isoformat(),
        COLORS.c.reset,
        file=file,
        flush=True,
    )


def main(args):
    streams = (sys.stdout, sys.stderr)
    color_pairs = random.sample(list(permutations(COLORS.colors, 2)), len(streams))
    styles = [(COLORS.f[f], COLORS.b[b]) for f,b in color_pairs]
    streams = dict(zip(streams, styles))

    if not args.interval:
        return randomtext(streams[sys.stdout], sys.stdout)

    endtime = datetime.now() + timedelta(seconds=args.timeout) if args.timeout else None
    while True:
        stream = random.choice(list(streams))
        randomtext(streams[stream], stream)
        if args.timeout:
            now = datetime.now()
            then = now + timedelta(seconds=args.interval)
            if then > endtime:
                break
        time.sleep(args.interval)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Generate "random" text')
    parser.add_argument('interval', nargs="?", type=float, default=0)
    parser.add_argument('timeout', nargs="?", type=float, default=0)
    args = parser.parse_args()
    try:
        main(args)
    except KeyboardInterrupt:
        pass

#!/usr/bin/env python3
"""
Split stdin on fields.

Like awk -F[delim] '{print $1; $print $2, ...}', but shorter.
"""
import fileinput
import os
import re
import sys
from functools import partial


def usage():
    print(
"""usage: f [delim] index[,index2,...] [flags]

index is an int, or Python-like slice: eg 1: or 0:10:2
flags:
    'r' to treat delim as a regular expression""")


def parse_index(index):
    result = []
    for items in index.split(','):
        range_ = items.split(':')
        if len(range_) > 3:
            print(f"Invalid slice: '{items}'", file=sys.stderr)
            return None

        try:
            if len(range_) == 1:  # no range
                result.append(int(*range_))
            else:
                result.append(slice(*(int(i) if i else None for i in range_)))
        except Exception as e:
            print(e, file=sys.stderr)
            return None

    return result


def print_parts(parts, index):
    for i in index:
        try:
            if isinstance(i, int):
                print(parts[i])
            else:
                for p in parts[i]:
                    print(p)
        except IndexError:
            print()


def main(args):
    valid_flags = 'r'
    flags = ''
    delim = None
    if len(args) == 2:
        index = args[1]
    elif 2 < len(args) <= 4:
        delim, index = args[1:3]
        if not delim:
            delim = None  # empty string is an alias for default separator
        if len(args) == 4:
            flags = args[3]
            if any(f not in valid_flags for f in flags or ''):
                print(
                    f"{flags!r} contained invalid flags. "
                    f"Allowed flags: {valid_flags!r}",
                    file=sys.stderr
                )
                return 1
    else:
        return usage()

    if not (index := parse_index(index)):
        return 1

    if delim == '\n':
        # note: reads all of stdin!
        input = [sys.stdin.read().rstrip().splitlines()]
    else:
        split = re.compile(delim).split if 'r' in flags else partial(str.split, sep=delim)
        input = (split(line.rstrip()) for line in fileinput.input('-'))

    for parts in input:
        print_parts(parts, index)


if __name__ == "__main__":
    try:
        result = main(sys.argv)
        sys.stdout.flush()
        sys.exit(result)
    except (KeyboardInterrupt, BrokenPipeError):
        # https://docs.python.org/3/library/signal.html#note-on-sigpipe
        devnull = os.open(os.devnull, os.O_WRONLY)
        os.dup2(devnull, sys.stdout.fileno())
        sys.exit(1)

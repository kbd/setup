#!/usr/bin/env python3

"""dl = download"""

import argparse
import os
import shlex
import sys
from pathlib import Path

from lib import colors as c, utils

BINARY_EXTENSIONS = ('.zip', '.tar.gz', '.dmg')
DEFAULT_DOWNLOADS_DIR = Path("~/Downloads").expanduser()


def run(*args):
    fprint('Executing', ' '.join(shlex.quote(a) for a in args), bold=False)
    sys.exit(utils.run(args, check=False).returncode)


def fprint(action, text, bold=True):
    print(f"{c.s.bold if bold else ''}{c.fg.blue}{action}: {c.fg.yellow}{text}{c.s.reset}")


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-r', '--raw', action='store_true', help='raw download')
    parser.add_argument('-d', '--directory', help='Directory to download to')
    parser.add_argument('url', nargs='?', help='URL to download')
    args, rest = parser.parse_known_args()

    url = args.url or utils.run(['cb'], cap=True)
    fprint("Downloading", url)

    # set working directory to downloads dir so tools download there by default
    fprint("Working dir", DEFAULT_DOWNLOADS_DIR)
    os.chdir(DEFAULT_DOWNLOADS_DIR)

    if (args.raw
        or url.endswith(BINARY_EXTENSIONS)
        or url.startswith('magnet:')
        or url.endswith('.torrent')
    ):
        cmd = ['aria2c']
        if args.directory:
            cmd += ['-d', args.directory]
    else:
        cmd = ['yt-dlp']
        if args.directory:
            cmd += ['-P', args.directory]

    run(*cmd, *rest, url)
